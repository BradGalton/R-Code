###################################################################################
# Calculation of Greeks from Binomial Lattices - American Call No Dividends
###################################################################################
bin.lattice.Amer<-function(N,T,type,S0,K,r,vol){
  dt<-T/N
  u<-exp(vol*sqrt(dt))
  d<-exp(-vol*sqrt(dt))
  p<-(exp(r*dt)-d)/(u-d)
  df<-exp(-r*dt)
  V<-pmax(0,type*(S0*(u^(0:N))*(d^(N-(0:N)))-K))  
  j.index<-seq(from=N-1,to=4,by=-1)
  for (j in j.index) {
    S<-S0*(u^(0:j))*(d^(j-(0:j)))
    V.new<-pmax(df*(p*V[2:(j+2)]+(1-p)*V[1:(j+1)]),type*(S[1:(j+1)]-K))
    V[1:(j+1)]<-V.new[1:(j+1)]
  }
  f<-V[3]
}

S0 <- 300
K <- 300
r <- 0.08
vol <- 0.30
type <- 1
T <- 4/12
N <- 252*(4/12)

# Run the Lattice code outside of function for value vector at index n=2 [f(0,0)/f(0,1)/f(0,2)]
f00 <- V[1]
f01 <- V[2]
f02 <- V[3]

# Delta
(delta <- (f02-f00)/((u^2*S0)-(d^2*S0)))

# Gamma
gamma1 <- ((f02-f01)/(u^2*S0-S0)-(f01-f00)/(S0-(d^2*S0)))
gamma2 <- .5*(u^2*S0-d^2*S0)
(gamma <- gamma1/gamma2)

# Theta
# Run the Lattice code outside of function for value vector at index n=4 [f(2,2)]
f22 <- V[3]
(theta <- (f22-f01)/2*dt)

# Vega
# Run the lattice code to return f(0,2) for multiple volatilties
vega.mat <- matrix(NA,nrow=3,ncol=101)
vega.mat[1,] <- seq(0,.5,.005)
vega.mat[2,] <- vega.mat[1,]-vol
for(i in 1:ncol(vega.mat)) {
  vega.mat[3,i] <- bin.lattice.Amer(N,T,type,S0,K,r,vega.mat[1,i])
}
(vega <- (vega.mat[3,]-f01)/vega.mat[2,])

# Rho
# Run the lattice code to return f(0,2) for multiple risk-free rates
rho.mat <- matrix(NA,nrow=3,ncol=65)
rho.mat[1,] <- seq(0,.16,.0025)
rho.mat[2,] <- rho.mat[1,]-r
for(i in 1:ncol(rho.mat)) {
  rho.mat[3,i] <- bin.lattice.Amer(N,T,type,S0,K,rho.mat[1,i],vol)
}
(rho <- (rho.mat[3,]-f01)/rho.mat[2,])
